% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nested_filtering.R
\name{nested_filtering}
\alias{nested_filtering}
\title{Perform nested filtering on multiple datasets}
\usage{
nested_filtering(
  data,
  target,
  filter_name = "auc",
  cutoff_method = "top_n",
  cutoff_treshold = 10,
  n_threads = 1,
  n_fold = 5
)
}
\arguments{
\item{data}{A list of datasets to be filtered.}

\item{target}{A list defining the ID and target variables names to be
used for filtering.}

\item{filter_name}{A character value specifying the feature filter method (https://mlr.mlr-org.com/articles/tutorial/filter_methods.html#current-methods, column "Classif").
Default is "auc".}

\item{cutoff_method}{A character value specifying the cutoff method to be
used for selecting features; one of the following:
   * "top_n",
   * "percentage",
   * "threshold".
Default is "top_n".}

\item{cutoff_treshold}{Depending of a cutoff method, a number of features to be selected (for "top_n" method),
percentage of variables to be selected (for "percentage" method), a threshold above which features are selected (for "percentage" method). Default is 1.}

\item{n_threads}{An integer value specifying the number of threads to be
used for feature ranking. Default is 1.}

\item{n_fold}{An integer value specifying the number of folds for
cross-validation. Cross-validation is used for overfitting prevention. A ranking of  Default is 5.}
}
\value{
A list containing the filtered datasets.
}
\description{
This function performs nested filtering on multiple datasets. It takes a
target dataset and a list of datasets as an input, adds target to each dataset
and removes missing target values. It then performs n-times feature ranking on
each fold. Nextly, ranking among all folds is created and mean metric value is used for variable selection.
The top features are selected according to a specified cutoff method.
}
\details{
It consists of two underlying functions:

   * The rank_features function ranks the features in a dataset based on their importance
for predicting a binary classification target variable. It takes in a dataset and a target
variable along with the filter method to be used for feature ranking. It applies the specified
filter method on each dataset and creates a ranked list of features along with their scores. It then
calculates the mean score and variance for each feature and returns the ranked features along with
the ranking table. The function also allows for multithreading.

   * The select_features function selects the top features from a dataset based on the ranking
calculated by the rank_features function. The function then selects the top features based on the specified
cutoff method and threshold. The selected features are then used to create a filtered dataset that only
includes the target variable and the selected features. The resulting filtered dataset is returned.
}
\examples{
\dontrun{
filtered_data <- nested_filtering(data = data_prepared, target = target, filter_name = "auc",
    cutoff_method = "top_n", cutoff_treshold = 10, n_fold = 5, n_threads = 10)
    }

}
